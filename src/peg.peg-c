/* A recursive-descent parser generated by peg 0.1.18 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#define YYRULECOUNT 38
#ifndef YY_MALLOC
#define YY_MALLOC(C, N)		malloc(N)
#endif
#ifndef YY_REALLOC
#define YY_REALLOC(C, P, N)	realloc(P, N)
#endif
#ifndef YY_FREE
#define YY_FREE(C, P)		free(P)
#endif
#ifndef YY_LOCAL
#define YY_LOCAL(T)	static T
#endif
#ifndef YY_ACTION
#define YY_ACTION(T)	static T
#endif
#ifndef YY_RULE
#define YY_RULE(T)	static T
#endif
#ifndef YY_PARSE
#define YY_PARSE(T)	T
#endif
#ifndef YYPARSE
#define YYPARSE		yyparse
#endif
#ifndef YYPARSEFROM
#define YYPARSEFROM	yyparsefrom
#endif
#ifndef YYRELEASE
#define YYRELEASE	yyrelease
#endif
#ifndef YY_BEGIN
#define YY_BEGIN	( yy->__begin= yy->__pos, 1)
#endif
#ifndef YY_END
#define YY_END		( yy->__end= yy->__pos, 1)
#endif
#ifdef YY_DEBUG
# define yyprintf(args)	fprintf args
#else
# define yyprintf(args)
#endif
#ifndef YYSTYPE
#define YYSTYPE	int
#endif
#ifndef YY_STACK_SIZE
#define YY_STACK_SIZE 128
#endif

#ifndef YY_BUFFER_SIZE
#define YY_BUFFER_SIZE 1024
#endif

#ifndef YY_PART

typedef struct _yycontext yycontext;
typedef void (*yyaction)(yycontext *yy, char *yytext, int yyleng);
typedef struct _yythunk { int begin, end;  yyaction  action;  struct _yythunk *next; } yythunk;

struct _yycontext {
  char     *__buf;
  int       __buflen;
  int       __pos;
  int       __limit;
  char     *__text;
  int       __textlen;
  int       __begin;
  int       __end;
  int       __textmax;
  yythunk  *__thunks;
  int       __thunkslen;
  int       __thunkpos;
  YYSTYPE   __;
  YYSTYPE  *__val;
  YYSTYPE  *__vals;
  int       __valslen;
  int       __inputpos;
  int       __lineno;
  int       __linenopos;
#ifdef YY_CTX_MEMBERS
  YY_CTX_MEMBERS
#endif
};

#ifdef YY_CTX_LOCAL
#define YY_CTX_PARAM_	yycontext *yyctx,
#define YY_CTX_PARAM	yycontext *yyctx
#define YY_CTX_ARG_	yyctx,
#define YY_CTX_ARG	yyctx
#ifndef YY_ENDLINE_CHAR
#define YY_ENDLINE_CHAR	'\n'
#endif
#ifndef YY_INPUT
#define YY_INPUT(yy, buf, result, max_size)		\
  {							\
    int yyc= getchar();					\
    result= (EOF != yyc);                       	\
    if(result) {                                	\
      *(buf)= yyc;                              	\
      if (YY_ENDLINE_CHAR == yyc)       		\
        {++yy->__lineno;yy->__linenopos=yy->__inputpos;}\
      ++yy->__inputpos;	                		\
    }                                           	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#else
#define YY_CTX_PARAM_
#define YY_CTX_PARAM
#define YY_CTX_ARG_
#define YY_CTX_ARG
yycontext _yyctx= { 0, 0 };
yycontext *yyctx= &_yyctx;
#ifndef YY_INPUT
#define YY_INPUT(buf, result, max_size)			\
  {							\
    int yyc= getchar();					\
    result= (EOF != yyc);                       	\
    if(result) {                                	\
      *(buf)= yyc;                              	\
      if (YY_ENDLINE_CHAR == yyc)       		\
        {++yyctx->__lineno;yyctx->__linenopos=yyctx->__inputpos;}\
      ++yyctx->__inputpos;	                		\
    }                                           	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#endif

YY_LOCAL(int) yyrefill(yycontext *yy)
{
  int yyn;
  while (yy->__buflen - yy->__pos < 512)
    {
#ifdef YY_DEBUG
      int new_buflen = yy->__buflen * 2;
      yy->__buf= (char *)YY_REALLOC(yy, yy->__buf, new_buflen);
      memset(yy->__buf+yy->__buflen, 0, yy->__buflen);
      yy->__buflen = new_buflen;
#else
      yy->__buflen *= 2;
      yy->__buf= (char *)YY_REALLOC(yy, yy->__buf, yy->__buflen);
#endif
    }
#ifdef YY_CTX_LOCAL
  YY_INPUT(yy, (yy->__buf + yy->__pos), yyn, (yy->__buflen - yy->__pos));
#else
  YY_INPUT((yy->__buf + yy->__pos), yyn, (yy->__buflen - yy->__pos));
#endif
  if (!yyn) return 0;
  yy->__limit += yyn;
  return 1;
}

YY_LOCAL(int) yymatchDot(yycontext *yy)
{
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  ++yy->__pos;
  return 1;
}

YY_LOCAL(int) yymatchChar(yycontext *yy, int c)
{
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  if ((unsigned char)yy->__buf[yy->__pos] == c)
    {
      ++yy->__pos;
      yyprintf((stderr, "  ok   yymatchChar(yy, %c) @%d:%d %s\n", c, yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchChar(yy, %c) @%d:%d %s\n", c, yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}

YY_LOCAL(int) yymatchCharCaseInsensitive(yycontext *yy, int c)
{
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  if (tolower(yy->__buf[yy->__pos]) == tolower(c))
    {
      ++yy->__pos;
      yyprintf((stderr, "  ok   yymatchCharCaseInsensitive(yy, %c) @%d:%d %s\n", c, yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchCharCaseInsensitive(yy, %c) @%d:%d %s\n", c, yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}

YY_LOCAL(int) yymatchString(yycontext *yy, const char *s)
{
  int yysav= yy->__pos;
  while (*s)
    {
      if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
      if (yy->__buf[yy->__pos] != *s)
        {
          yy->__pos= yysav;
          return 0;
        }
      ++s;
      ++yy->__pos;
    }
  return 1;
}

YY_LOCAL(int) yymatchStringCaseInsensitive(yycontext *yy, const char *s)
{
  int yysav= yy->__pos;
  while (*s)
    {
      if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
      if (tolower(yy->__buf[yy->__pos]) != tolower(*s))
        {
          yy->__pos= yysav;
          return 0;
        }
      ++s;
      ++yy->__pos;
    }
  return 1;
}

YY_LOCAL(int) yymatchClass(yycontext *yy, unsigned char *bits)
{
  int c;
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  c= (unsigned char)yy->__buf[yy->__pos];
  if (bits[c >> 3] & (1 << (c & 7)))
    {
      ++yy->__pos;
      yyprintf((stderr, "  ok   yymatchClass @%d:%d %s\n", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchClass @%d:%d %s\n", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}

YY_LOCAL(void) yyDo(yycontext *yy, yyaction action, int begin, int end)
{
  while (yy->__thunkpos >= yy->__thunkslen)
    {
      yy->__thunkslen *= 2;
      yy->__thunks= (yythunk *)YY_REALLOC(yy, yy->__thunks, sizeof(yythunk) * yy->__thunkslen);
    }
  yy->__thunks[yy->__thunkpos].begin=  begin;
  yy->__thunks[yy->__thunkpos].end=    end;
  yy->__thunks[yy->__thunkpos].action= action;
  ++yy->__thunkpos;
}

YY_LOCAL(int) yyText(yycontext *yy, int begin, int end)
{
  int yyleng= end - begin;
  if (yyleng <= 0)
    yyleng= 0;
  else
    {
      while (yy->__textlen < (yyleng + 1))
	{
	  yy->__textlen *= 2;
	  yy->__text= (char *)YY_REALLOC(yy, yy->__text, yy->__textlen);
	}
      memcpy(yy->__text, yy->__buf + begin, yyleng);
    }
  yy->__text[yyleng]= '\0';
  return yyleng;
}

YY_LOCAL(void) yyDone(yycontext *yy)
{
  int pos;
  for (pos= 0;  pos < yy->__thunkpos;  ++pos)
    {
      yythunk *thunk= &yy->__thunks[pos];
      int yyleng= thunk->end ? yyText(yy, thunk->begin, thunk->end) : thunk->begin;
      yyprintf((stderr, "DO [%d] %p %s\n", pos, thunk->action, yy->__text));
      thunk->action(yy, yy->__text, yyleng);
    }
  yy->__thunkpos= 0;
}

YY_LOCAL(void) yyCommit(yycontext *yy)
{
  if ((yy->__limit -= yy->__pos))
    {
      memmove(yy->__buf, yy->__buf + yy->__pos, yy->__limit);
    }
  yy->__begin -= yy->__pos;
  yy->__end -= yy->__pos;
  yy->__pos= yy->__thunkpos= 0;
}

YY_LOCAL(int) yyAccept(yycontext *yy, int tp0)
{
  if (tp0)
    {
      fprintf(stderr, "accept denied at %d\n", tp0);
      return 0;
    }
  else
    {
      yyDone(yy);
      yyCommit(yy);
    }
  return 1;
}

YY_LOCAL(void) yyPush(yycontext *yy, char *text, int count)
{
  yy->__val += count;
  while (yy->__valslen <= yy->__val - yy->__vals)
    {
      long offset= yy->__val - yy->__vals;
      yy->__valslen *= 2;
      yy->__vals= (YYSTYPE *)YY_REALLOC(yy, yy->__vals, sizeof(YYSTYPE) * yy->__valslen);
      yy->__val= yy->__vals + offset;
    }
}
YY_LOCAL(void) yyPop(yycontext *yy, char *text, int count)   { yy->__val -= count; }
YY_LOCAL(void) yySet(yycontext *yy, char *text, int count)   { yy->__val[count]= yy->__; }

#endif /* YY_PART */

#define	YYACCEPT	yyAccept(yy, yythunkpos0)

YY_RULE(int) yy_LiteralBraces(yycontext *yy); /* 38 */
YY_RULE(int) yy_Braces(yycontext *yy); /* 37 */
YY_RULE(int) yy_EndOfLine(yycontext *yy); /* 36 */
YY_RULE(int) yy_Comment(yycontext *yy); /* 35 */
YY_RULE(int) yy_Space(yycontext *yy); /* 34 */
YY_RULE(int) yy_Range(yycontext *yy); /* 33 */
YY_RULE(int) yy_Char(yycontext *yy); /* 32 */
YY_RULE(int) yy_IdentCont(yycontext *yy); /* 31 */
YY_RULE(int) yy_END(yycontext *yy); /* 30 */
YY_RULE(int) yy_BEGIN(yycontext *yy); /* 29 */
YY_RULE(int) yy_DOT(yycontext *yy); /* 28 */
YY_RULE(int) yy_Class(yycontext *yy); /* 27 */
YY_RULE(int) yy_IdentStart(yycontext *yy); /* 26 */
YY_RULE(int) yy_Literal(yycontext *yy); /* 25 */
YY_RULE(int) yy_CLOSE(yycontext *yy); /* 24 */
YY_RULE(int) yy_OPEN(yycontext *yy); /* 23 */
YY_RULE(int) yy_COLON(yycontext *yy); /* 22 */
YY_RULE(int) yy_PLUS(yycontext *yy); /* 21 */
YY_RULE(int) yy_STAR(yycontext *yy); /* 20 */
YY_RULE(int) yy_QUESTION(yycontext *yy); /* 19 */
YY_RULE(int) yy_Primary(yycontext *yy); /* 18 */
YY_RULE(int) yy_NOT(yycontext *yy); /* 17 */
YY_RULE(int) yy_Suffix(yycontext *yy); /* 16 */
YY_RULE(int) yy_AND(yycontext *yy); /* 15 */
YY_RULE(int) yy_AT(yycontext *yy); /* 14 */
YY_RULE(int) yy_Action(yycontext *yy); /* 13 */
YY_RULE(int) yy_TILDE(yycontext *yy); /* 12 */
YY_RULE(int) yy_Prefix(yycontext *yy); /* 11 */
YY_RULE(int) yy_error(yycontext *yy); /* 10 */
YY_RULE(int) yy_SLASH(yycontext *yy); /* 9 */
YY_RULE(int) yy_Sequence(yycontext *yy); /* 8 */
YY_RULE(int) yy_Expression(yycontext *yy); /* 7 */
YY_RULE(int) yy_LEFTARROW(yycontext *yy); /* 6 */
YY_RULE(int) yy_Identifier(yycontext *yy); /* 5 */
YY_RULE(int) yy_EndOfFile(yycontext *yy); /* 4 */
YY_RULE(int) yy_Definition(yycontext *yy); /* 3 */
YY_RULE(int) yy_Spacing(yycontext *yy); /* 2 */
YY_RULE(int) yy_Grammar(yycontext *yy); /* 1 */

YY_ACTION(void) yy_10_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_10_Primary\n"));
  {
#line 0
   push(makePredicate("YY_END")); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_9_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_9_Primary\n"));
  {
#line 0
   push(makePredicate("YY_BEGIN")); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_8_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_8_Primary\n"));
  {
#line 0
   push(makeAction(0, yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_7_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_7_Primary\n"));
  {
#line 0
   push(makeDot()); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_6_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_6_Primary\n"));
  {
#line 0
   push(makeClass(yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_5_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_5_Primary\n"));
  {
#line 0
   setTopStrCharCaseInsensitive(); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_4_Primary\n"));
  {
#line 0
   push(makeString(yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_3_Primary\n"));
  {
#line 0
   push(makeName(findRule(yytext))); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Primary\n"));
  {
#line 0
   Node *name= makeName(findRule(yytext));  name->name.variable= pop();  push(name); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Primary(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Primary\n"));
  {
#line 0
   push(makeVariable(yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_Suffix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_3_Suffix\n"));
  {
#line 0
   push(makePlus (pop())); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_Suffix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Suffix\n"));
  {
#line 0
   push(makeStar (pop())); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Suffix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Suffix\n"));
  {
#line 0
   push(makeQuery(pop())); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_4_Prefix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_4_Prefix\n"));
  {
#line 0
   push(makePeekNot(pop())); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_3_Prefix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_3_Prefix\n"));
  {
#line 0
   push(makePeekFor(pop())); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_Prefix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Prefix\n"));
  {
#line 0
   push(makePredicate(yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Prefix(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Prefix\n"));
  {
#line 0
   push(makeInline(yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_error(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_error\n"));
  {
#line 0
   push(makeError(pop(), yytext)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_Sequence(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Sequence\n"));
  {
#line 0
   push(makePredicate("1")); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Sequence(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Sequence\n"));
  {
#line 0
   Node *f= pop();  push(Sequence_append(pop(), f)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Expression(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Expression\n"));
  {
#line 0
   Node *f= pop();  push(Alternate_append(pop(), f)); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_Definition(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Definition\n"));
  {
#line 0
   Node *e= pop();  Rule_setExpression(pop(), e); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_Definition(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Definition\n"));
  {
#line 0
   if (push(beginRule(findRule(yytext)))->rule.expression) fprintf(stderr, "rule '%s' redefined\n", yytext); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}

YY_RULE(int) yy_LiteralBraces(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "LiteralBraces"));
  {  int yypos2= yy->__pos, yythunkpos2= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l3;
  l4:;
  {  int yypos5= yy->__pos, yythunkpos5= yy->__thunkpos;
  {  int yypos6= yy->__pos, yythunkpos6= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  goto l5;
  l6:;	  yy->__pos= yypos6; yy->__thunkpos= yythunkpos6;
  }  if (!yy_Char(yy)) goto l5;  goto l4;
  l5:;	  yy->__pos= yypos5; yy->__thunkpos= yythunkpos5;
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l3;  goto l2;
  l3:;	  yy->__pos= yypos2; yy->__thunkpos= yythunkpos2;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l1;
  l7:;
  {  int yypos8= yy->__pos, yythunkpos8= yy->__thunkpos;
  {  int yypos9= yy->__pos, yythunkpos9= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l9;  goto l8;
  l9:;	  yy->__pos= yypos9; yy->__thunkpos= yythunkpos9;
  }  if (!yy_Char(yy)) goto l8;  goto l7;
  l8:;	  yy->__pos= yypos8; yy->__thunkpos= yythunkpos8;
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l1;
  }
  l2:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "LiteralBraces", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l1:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "LiteralBraces", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Braces(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Braces"));
  {  int yypos11= yy->__pos, yythunkpos11= yy->__thunkpos;  if (!yymatchChar(yy, '{')) goto l12;
  l13:;
  {  int yypos14= yy->__pos, yythunkpos14= yy->__thunkpos;  if (!yy_Braces(yy)) goto l14;  goto l13;
  l14:;	  yy->__pos= yypos14; yy->__thunkpos= yythunkpos14;
  }  if (!yymatchChar(yy, '}')) goto l12;  goto l11;
  l12:;	  yy->__pos= yypos11; yy->__thunkpos= yythunkpos11;  if (!yy_LiteralBraces(yy)) goto l15;  goto l11;
  l15:;	  yy->__pos= yypos11; yy->__thunkpos= yythunkpos11;
  {  int yypos16= yy->__pos, yythunkpos16= yy->__thunkpos;  if (!yymatchChar(yy, '}')) goto l16;  goto l10;
  l16:;	  yy->__pos= yypos16; yy->__thunkpos= yythunkpos16;
  }
  {  int yypos17= yy->__pos, yythunkpos17= yy->__thunkpos;  if (!yy_EndOfLine(yy)) goto l18;  goto l17;
  l18:;	  yy->__pos= yypos17; yy->__thunkpos= yythunkpos17;  if (!yymatchDot(yy)) goto l10;
  }
  l17:;
  }
  l11:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Braces", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l10:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Braces", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_EndOfLine(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "EndOfLine"));
  {  int yypos20= yy->__pos, yythunkpos20= yy->__thunkpos;  if (!yymatchString(yy, "\r\n")) goto l21;  goto l20;
  l21:;	  yy->__pos= yypos20; yy->__thunkpos= yythunkpos20;  if (!yymatchChar(yy, '\n')) goto l22;  goto l20;
  l22:;	  yy->__pos= yypos20; yy->__thunkpos= yythunkpos20;  if (!yymatchChar(yy, '\r')) goto l19;
  }
  l20:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "EndOfLine", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l19:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "EndOfLine", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Comment(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Comment"));  if (!yymatchChar(yy, '#')) goto l23;
  l24:;
  {  int yypos25= yy->__pos, yythunkpos25= yy->__thunkpos;
  {  int yypos26= yy->__pos, yythunkpos26= yy->__thunkpos;  if (!yy_EndOfLine(yy)) goto l26;  goto l25;
  l26:;	  yy->__pos= yypos26; yy->__thunkpos= yythunkpos26;
  }  if (!yymatchDot(yy)) goto l25;  goto l24;
  l25:;	  yy->__pos= yypos25; yy->__thunkpos= yythunkpos25;
  }  if (!yy_EndOfLine(yy)) goto l23;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Comment", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l23:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Comment", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Space(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Space"));
  {  int yypos28= yy->__pos, yythunkpos28= yy->__thunkpos;  if (!yymatchChar(yy, ' ')) goto l29;  goto l28;
  l29:;	  yy->__pos= yypos28; yy->__thunkpos= yythunkpos28;  if (!yymatchChar(yy, '\t')) goto l30;  goto l28;
  l30:;	  yy->__pos= yypos28; yy->__thunkpos= yythunkpos28;  if (!yy_EndOfLine(yy)) goto l27;
  }
  l28:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Space", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l27:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Space", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Range(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Range"));
  {  int yypos32= yy->__pos, yythunkpos32= yy->__thunkpos;  if (!yy_Char(yy)) goto l33;  if (!yymatchChar(yy, '-')) goto l33;
  {  int yypos34= yy->__pos, yythunkpos34= yy->__thunkpos;  if (!yymatchChar(yy, ']')) goto l34;  goto l33;
  l34:;	  yy->__pos= yypos34; yy->__thunkpos= yythunkpos34;
  }  if (!yy_Char(yy)) goto l33;  goto l32;
  l33:;	  yy->__pos= yypos32; yy->__thunkpos= yythunkpos32;  if (!yy_Char(yy)) goto l31;
  }
  l32:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Range", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l31:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Range", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Char(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Char"));
  {  int yypos36= yy->__pos, yythunkpos36= yy->__thunkpos;  if (!yymatchChar(yy, '\\')) goto l37;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\204\000\000\000\000\000\000\070\146\100\124\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l37;  goto l36;
  l37:;	  yy->__pos= yypos36; yy->__thunkpos= yythunkpos36;  if (!yymatchChar(yy, '\\')) goto l38;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l38;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l38;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l38;  goto l36;
  l38:;	  yy->__pos= yypos36; yy->__thunkpos= yythunkpos36;  if (!yymatchChar(yy, '\\')) goto l39;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l39;
  {  int yypos40= yy->__pos, yythunkpos40= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l40;  goto l41;
  l40:;	  yy->__pos= yypos40; yy->__thunkpos= yythunkpos40;
  }
  l41:;	  goto l36;
  l39:;	  yy->__pos= yypos36; yy->__thunkpos= yythunkpos36;  if (!yymatchChar(yy, '\\')) goto l42;  if (!yymatchChar(yy, '-')) goto l42;  goto l36;
  l42:;	  yy->__pos= yypos36; yy->__thunkpos= yythunkpos36;
  {  int yypos43= yy->__pos, yythunkpos43= yy->__thunkpos;  if (!yymatchChar(yy, '\\')) goto l43;  goto l35;
  l43:;	  yy->__pos= yypos43; yy->__thunkpos= yythunkpos43;
  }  if (!yymatchDot(yy)) goto l35;
  }
  l36:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Char", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l35:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Char", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_IdentCont(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "IdentCont"));
  {  int yypos45= yy->__pos, yythunkpos45= yy->__thunkpos;  if (!yy_IdentStart(yy)) goto l46;  goto l45;
  l46:;	  yy->__pos= yypos45; yy->__thunkpos= yythunkpos45;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l44;
  }
  l45:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "IdentCont", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l44:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "IdentCont", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_END(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "END"));  if (!yymatchChar(yy, '>')) goto l47;  if (!yy_Spacing(yy)) goto l47;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "END", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l47:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "END", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_BEGIN(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "BEGIN"));  if (!yymatchChar(yy, '<')) goto l48;  if (!yy_Spacing(yy)) goto l48;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "BEGIN", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l48:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "BEGIN", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_DOT(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "DOT"));  if (!yymatchChar(yy, '.')) goto l49;  if (!yy_Spacing(yy)) goto l49;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "DOT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l49:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "DOT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Class(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Class"));  if (!yymatchChar(yy, '[')) goto l50;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l50;
#undef yytext
#undef yyleng
  }
  l51:;
  {  int yypos52= yy->__pos, yythunkpos52= yy->__thunkpos;
  {  int yypos53= yy->__pos, yythunkpos53= yy->__thunkpos;  if (!yymatchChar(yy, ']')) goto l53;  goto l52;
  l53:;	  yy->__pos= yypos53; yy->__thunkpos= yythunkpos53;
  }  if (!yy_Range(yy)) goto l52;  goto l51;
  l52:;	  yy->__pos= yypos52; yy->__thunkpos= yythunkpos52;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l50;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, ']')) goto l50;  if (!yy_Spacing(yy)) goto l50;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Class", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l50:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Class", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_IdentStart(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "IdentStart"));  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l54;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "IdentStart", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l54:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "IdentStart", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Literal(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Literal"));
  {  int yypos56= yy->__pos, yythunkpos56= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l57;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l57;
#undef yytext
#undef yyleng
  }
  l58:;
  {  int yypos59= yy->__pos, yythunkpos59= yy->__thunkpos;
  {  int yypos60= yy->__pos, yythunkpos60= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l60;  goto l59;
  l60:;	  yy->__pos= yypos60; yy->__thunkpos= yythunkpos60;
  }  if (!yy_Char(yy)) goto l59;  goto l58;
  l59:;	  yy->__pos= yypos59; yy->__thunkpos= yythunkpos59;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l57;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l57;  if (!yy_Spacing(yy)) goto l57;  goto l56;
  l57:;	  yy->__pos= yypos56; yy->__thunkpos= yythunkpos56;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l61;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l61;
#undef yytext
#undef yyleng
  }
  l62:;
  {  int yypos63= yy->__pos, yythunkpos63= yy->__thunkpos;
  {  int yypos64= yy->__pos, yythunkpos64= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l64;  goto l63;
  l64:;	  yy->__pos= yypos64; yy->__thunkpos= yythunkpos64;
  }  if (!yy_Char(yy)) goto l63;  goto l62;
  l63:;	  yy->__pos= yypos63; yy->__thunkpos= yythunkpos63;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l61;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l61;  if (!yy_Spacing(yy)) goto l61;  goto l56;
  l61:;	  yy->__pos= yypos56; yy->__thunkpos= yythunkpos56;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l55;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l55;
#undef yytext
#undef yyleng
  }
  l65:;
  {  int yypos66= yy->__pos, yythunkpos66= yy->__thunkpos;
  {  int yypos67= yy->__pos, yythunkpos67= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l67;  goto l66;
  l67:;	  yy->__pos= yypos67; yy->__thunkpos= yythunkpos67;
  }  if (!yy_Char(yy)) goto l66;  goto l65;
  l66:;	  yy->__pos= yypos66; yy->__thunkpos= yythunkpos66;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l55;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l55;  if (!yy_Spacing(yy)) goto l55;
  }
  l56:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Literal", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l55:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Literal", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_CLOSE(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "CLOSE"));  if (!yymatchChar(yy, ')')) goto l68;  if (!yy_Spacing(yy)) goto l68;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "CLOSE", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l68:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "CLOSE", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_OPEN(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "OPEN"));  if (!yymatchChar(yy, '(')) goto l69;  if (!yy_Spacing(yy)) goto l69;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "OPEN", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l69:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "OPEN", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_COLON(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "COLON"));  if (!yymatchChar(yy, ':')) goto l70;  if (!yy_Spacing(yy)) goto l70;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "COLON", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l70:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "COLON", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_PLUS(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "PLUS"));  if (!yymatchChar(yy, '+')) goto l71;  if (!yy_Spacing(yy)) goto l71;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "PLUS", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l71:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "PLUS", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_STAR(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "STAR"));  if (!yymatchChar(yy, '*')) goto l72;  if (!yy_Spacing(yy)) goto l72;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "STAR", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l72:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "STAR", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_QUESTION(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "QUESTION"));  if (!yymatchChar(yy, '?')) goto l73;  if (!yy_Spacing(yy)) goto l73;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "QUESTION", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l73:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "QUESTION", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Primary(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Primary"));
  {  int yypos75= yy->__pos, yythunkpos75= yy->__thunkpos;
  {  int yypos77= yy->__pos, yythunkpos77= yy->__thunkpos;  if (!yy_AT(yy)) goto l77;  goto l78;
  l77:;	  yy->__pos= yypos77; yy->__thunkpos= yythunkpos77;
  }
  l78:;
  {  int yypos79= yy->__pos, yythunkpos79= yy->__thunkpos;  if (!yy_Identifier(yy)) goto l80;  yyDo(yy, yy_1_Primary, yy->__begin, yy->__end);  if (!yy_COLON(yy)) goto l80;  if (!yy_Identifier(yy)) goto l80;
  {  int yypos81= yy->__pos, yythunkpos81= yy->__thunkpos;  if (!yy_LEFTARROW(yy)) goto l81;  goto l80;
  l81:;	  yy->__pos= yypos81; yy->__thunkpos= yythunkpos81;
  }  yyDo(yy, yy_2_Primary, yy->__begin, yy->__end);  goto l79;
  l80:;	  yy->__pos= yypos79; yy->__thunkpos= yythunkpos79;  if (!yy_Identifier(yy)) goto l76;
  {  int yypos82= yy->__pos, yythunkpos82= yy->__thunkpos;  if (!yy_LEFTARROW(yy)) goto l82;  goto l76;
  l82:;	  yy->__pos= yypos82; yy->__thunkpos= yythunkpos82;
  }  yyDo(yy, yy_3_Primary, yy->__begin, yy->__end);
  }
  l79:;	  goto l75;
  l76:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_OPEN(yy)) goto l83;  if (!yy_Expression(yy)) goto l83;  if (!yy_CLOSE(yy)) goto l85;  goto l84;
  l85:;	  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
  yyerror("missing expected `)`");;
#undef yytext
#undef yyleng
  }  goto l83;
  l84:;	  goto l75;
  l83:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;
  {  int yypos87= yy->__pos, yythunkpos87= yy->__thunkpos;  if (!yy_AT(yy)) goto l87;  goto l88;
  l87:;	  yy->__pos= yypos87; yy->__thunkpos= yythunkpos87;
  }
  l88:;	  if (!yy_Literal(yy)) goto l86;  yyDo(yy, yy_4_Primary, yy->__begin, yy->__end);
  {  int yypos89= yy->__pos, yythunkpos89= yy->__thunkpos;  if (!yymatchChar(yy, 'i')) goto l89;
  {  int yypos91= yy->__pos, yythunkpos91= yy->__thunkpos;  if (!yy_IdentStart(yy)) goto l91;  goto l89;
  l91:;	  yy->__pos= yypos91; yy->__thunkpos= yythunkpos91;
  }  if (!yy_Spacing(yy)) goto l89;  yyDo(yy, yy_5_Primary, yy->__begin, yy->__end);  goto l90;
  l89:;	  yy->__pos= yypos89; yy->__thunkpos= yythunkpos89;
  }
  l90:;	  goto l75;
  l86:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_Class(yy)) goto l92;  yyDo(yy, yy_6_Primary, yy->__begin, yy->__end);  goto l75;
  l92:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_DOT(yy)) goto l93;  yyDo(yy, yy_7_Primary, yy->__begin, yy->__end);  goto l75;
  l93:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_Action(yy)) goto l94;  yyDo(yy, yy_8_Primary, yy->__begin, yy->__end);  goto l75;
  l94:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_BEGIN(yy)) goto l95;  yyDo(yy, yy_9_Primary, yy->__begin, yy->__end);  goto l75;
  l95:;	  yy->__pos= yypos75; yy->__thunkpos= yythunkpos75;  if (!yy_END(yy)) goto l74;  yyDo(yy, yy_10_Primary, yy->__begin, yy->__end);
  }
  l75:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Primary", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l74:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Primary", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_NOT(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "NOT"));  if (!yymatchChar(yy, '!')) goto l96;  if (!yy_Spacing(yy)) goto l96;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "NOT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l96:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "NOT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Suffix(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Suffix"));  if (!yy_Primary(yy)) goto l97;
  {  int yypos98= yy->__pos, yythunkpos98= yy->__thunkpos;
  {  int yypos100= yy->__pos, yythunkpos100= yy->__thunkpos;  if (!yy_QUESTION(yy)) goto l101;  yyDo(yy, yy_1_Suffix, yy->__begin, yy->__end);  goto l100;
  l101:;	  yy->__pos= yypos100; yy->__thunkpos= yythunkpos100;  if (!yy_STAR(yy)) goto l102;  yyDo(yy, yy_2_Suffix, yy->__begin, yy->__end);  goto l100;
  l102:;	  yy->__pos= yypos100; yy->__thunkpos= yythunkpos100;  if (!yy_PLUS(yy)) goto l98;  yyDo(yy, yy_3_Suffix, yy->__begin, yy->__end);
  }
  l100:;	  goto l99;
  l98:;	  yy->__pos= yypos98; yy->__thunkpos= yythunkpos98;
  }
  l99:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Suffix", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l97:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Suffix", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_AND(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "AND"));  if (!yymatchChar(yy, '&')) goto l103;  if (!yy_Spacing(yy)) goto l103;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "AND", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l103:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "AND", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_AT(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "AT"));  if (!yymatchChar(yy, '@')) goto l104;  if (!yy_Spacing(yy)) goto l104;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "AT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l104:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "AT", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Action(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Action"));  if (!yymatchChar(yy, '{')) goto l105;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l105;
#undef yytext
#undef yyleng
  }
  l106:;
  {  int yypos107= yy->__pos, yythunkpos107= yy->__thunkpos;  if (!yy_Braces(yy)) goto l107;  goto l106;
  l107:;	  yy->__pos= yypos107; yy->__thunkpos= yythunkpos107;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l105;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, '}')) goto l105;  if (!yy_Spacing(yy)) goto l105;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Action", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l105:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Action", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_TILDE(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "TILDE"));  if (!yymatchChar(yy, '~')) goto l108;  if (!yy_Spacing(yy)) goto l108;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "TILDE", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l108:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "TILDE", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Prefix(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Prefix"));
  {  int yypos110= yy->__pos, yythunkpos110= yy->__thunkpos;  if (!yy_AT(yy)) goto l111;  if (!yy_Action(yy)) goto l111;  yyDo(yy, yy_1_Prefix, yy->__begin, yy->__end);  goto l110;
  l111:;	  yy->__pos= yypos110; yy->__thunkpos= yythunkpos110;  if (!yy_AND(yy)) goto l112;  if (!yy_Action(yy)) goto l112;  yyDo(yy, yy_2_Prefix, yy->__begin, yy->__end);  goto l110;
  l112:;	  yy->__pos= yypos110; yy->__thunkpos= yythunkpos110;  if (!yy_AND(yy)) goto l113;  if (!yy_Suffix(yy)) goto l113;  yyDo(yy, yy_3_Prefix, yy->__begin, yy->__end);  goto l110;
  l113:;	  yy->__pos= yypos110; yy->__thunkpos= yythunkpos110;  if (!yy_NOT(yy)) goto l114;  if (!yy_Suffix(yy)) goto l114;  yyDo(yy, yy_4_Prefix, yy->__begin, yy->__end);  goto l110;
  l114:;	  yy->__pos= yypos110; yy->__thunkpos= yythunkpos110;  if (!yy_Suffix(yy)) goto l109;
  }
  l110:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Prefix", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l109:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Prefix", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_error(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "error"));  if (!yy_Prefix(yy)) goto l115;
  {  int yypos116= yy->__pos, yythunkpos116= yy->__thunkpos;  if (!yy_TILDE(yy)) goto l116;  if (!yy_Action(yy)) goto l116;  yyDo(yy, yy_1_error, yy->__begin, yy->__end);  goto l117;
  l116:;	  yy->__pos= yypos116; yy->__thunkpos= yythunkpos116;
  }
  l117:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "error", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l115:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "error", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_SLASH(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "SLASH"));  if (!yymatchChar(yy, '/')) goto l118;  if (!yy_Spacing(yy)) goto l118;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "SLASH", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l118:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "SLASH", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Sequence(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Sequence"));
  {  int yypos120= yy->__pos, yythunkpos120= yy->__thunkpos;  if (!yy_error(yy)) goto l121;
  l122:;
  {  int yypos123= yy->__pos, yythunkpos123= yy->__thunkpos;  if (!yy_error(yy)) goto l123;  yyDo(yy, yy_1_Sequence, yy->__begin, yy->__end);  goto l122;
  l123:;	  yy->__pos= yypos123; yy->__thunkpos= yythunkpos123;
  }  goto l120;
  l121:;	  yy->__pos= yypos120; yy->__thunkpos= yythunkpos120;  yyDo(yy, yy_2_Sequence, yy->__begin, yy->__end);
  }
  l120:;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Sequence", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l119:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Sequence", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Expression(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Expression"));  if (!yy_Sequence(yy)) goto l124;
  l125:;
  {  int yypos126= yy->__pos, yythunkpos126= yy->__thunkpos;  if (!yy_SLASH(yy)) goto l126;  if (!yy_Sequence(yy)) goto l126;  yyDo(yy, yy_1_Expression, yy->__begin, yy->__end);  goto l125;
  l126:;	  yy->__pos= yypos126; yy->__thunkpos= yythunkpos126;
  }
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Expression", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l124:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Expression", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_LEFTARROW(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "LEFTARROW"));
  {  int yypos128= yy->__pos, yythunkpos128= yy->__thunkpos;  if (!yymatchString(yy, "<--")) goto l129;  goto l128;
  l129:;	  yy->__pos= yypos128; yy->__thunkpos= yythunkpos128;  if (!yymatchString(yy, "<-|")) goto l130;  goto l128;
  l130:;	  yy->__pos= yypos128; yy->__thunkpos= yythunkpos128;  if (!yymatchString(yy, "<-")) goto l131;  goto l128;
  l131:;	  yy->__pos= yypos128; yy->__thunkpos= yythunkpos128;  if (!yymatchString(yy, "<==")) goto l127;
  }
  l128:;	  if (!yy_Spacing(yy)) goto l127;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "LEFTARROW", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l127:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "LEFTARROW", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Identifier(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Identifier"));  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l132;
#undef yytext
#undef yyleng
  }  if (!yy_IdentStart(yy)) goto l132;
  l133:;
  {  int yypos134= yy->__pos, yythunkpos134= yy->__thunkpos;  if (!yy_IdentCont(yy)) goto l134;  goto l133;
  l134:;	  yy->__pos= yypos134; yy->__thunkpos= yythunkpos134;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l132;
#undef yytext
#undef yyleng
  }  if (!yy_Spacing(yy)) goto l132;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Identifier", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l132:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Identifier", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_EndOfFile(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "EndOfFile"));
  {  int yypos136= yy->__pos, yythunkpos136= yy->__thunkpos;  if (!yymatchDot(yy)) goto l136;  goto l135;
  l136:;	  yy->__pos= yypos136; yy->__thunkpos= yythunkpos136;
  }
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "EndOfFile", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l135:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "EndOfFile", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Definition(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Definition"));  if (!yy_Identifier(yy)) goto l137;  yyDo(yy, yy_1_Definition, yy->__begin, yy->__end);  if (!yy_LEFTARROW(yy)) goto l137;  if (!yy_Expression(yy)) goto l137;  yyDo(yy, yy_2_Definition, yy->__begin, yy->__end);  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!( YYACCEPT )) goto l137;
#undef yytext
#undef yyleng
  }
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Definition", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l137:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Definition", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Spacing(yycontext *yy)
{
  yyprintf((stderr, "%s\n", "Spacing"));
  l139:;
  {  int yypos140= yy->__pos, yythunkpos140= yy->__thunkpos;
  {  int yypos141= yy->__pos, yythunkpos141= yy->__thunkpos;  if (!yy_Space(yy)) goto l142;  goto l141;
  l142:;	  yy->__pos= yypos141; yy->__thunkpos= yythunkpos141;  if (!yy_Comment(yy)) goto l140;
  }
  l141:;	  goto l139;
  l140:;	  yy->__pos= yypos140; yy->__thunkpos= yythunkpos140;
  }
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Spacing", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
}
YY_RULE(int) yy_Grammar(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Grammar"));  if (!yy_Spacing(yy)) goto l143;  if (!yy_Definition(yy)) goto l143;
  l144:;
  {  int yypos145= yy->__pos, yythunkpos145= yy->__thunkpos;  if (!yy_Definition(yy)) goto l145;  goto l144;
  l145:;	  yy->__pos= yypos145; yy->__thunkpos= yythunkpos145;
  }  if (!yy_EndOfFile(yy)) goto l143;
  yyprintf((stderr, "  ok   %s @%d:%d %s\n", "Grammar", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 1;
  l143:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @%d:%d %s\n", "Grammar", yy->__lineno, yy->__inputpos-yy->__linenopos, yy->__buf+yy->__pos));
  return 0;
}

#ifndef YY_PART

typedef int (*yyrule)(yycontext *yy);

YY_PARSE(int) YYPARSEFROM(YY_CTX_PARAM_ yyrule yystart)
{
  int yyok;
  if (!yyctx->__buflen)
    {
      yyctx->__buflen= YY_BUFFER_SIZE;
      yyctx->__buf= (char *)YY_MALLOC(yyctx, yyctx->__buflen);
#ifdef YY_DEBUG
      memset(yyctx->__buf, 0, yyctx->__buflen);
#endif
      yyctx->__textlen= YY_BUFFER_SIZE;
      yyctx->__text= (char *)YY_MALLOC(yyctx, yyctx->__textlen);
      yyctx->__thunkslen= YY_STACK_SIZE;
      yyctx->__thunks= (yythunk *)YY_MALLOC(yyctx, sizeof(yythunk) * yyctx->__thunkslen);
      yyctx->__valslen= YY_STACK_SIZE;
      yyctx->__vals= (YYSTYPE *)YY_MALLOC(yyctx, sizeof(YYSTYPE) * yyctx->__valslen);
      yyctx->__begin= yyctx->__end= yyctx->__pos= yyctx->__limit= yyctx->__thunkpos= 0;
    }
  yyctx->__begin= yyctx->__end= yyctx->__pos;
  yyctx->__thunkpos= 0;
  yyctx->__val= yyctx->__vals;
  yyok= yystart(yyctx);
  if (yyok) yyDone(yyctx);
  yyCommit(yyctx);
  return yyok;
}

YY_PARSE(int) YYPARSE(YY_CTX_PARAM)
{
  return YYPARSEFROM(YY_CTX_ARG_ yy_Grammar);
}

YY_PARSE(yycontext *) YYRELEASE(yycontext *yyctx)
{
  if (yyctx->__buflen)
    {
      yyctx->__buflen= 0;
      YY_FREE(yyctx, yyctx->__buf);
      YY_FREE(yyctx, yyctx->__text);
      YY_FREE(yyctx, yyctx->__thunks);
      YY_FREE(yyctx, yyctx->__vals);
    }
  return yyctx;
}

#endif
